[data-page='season'] header {
  background: transparent;

  @media (max-width: $sm) {
    background: $black;
  }
}

header {
  background: $black;
  position: fixed;
  top: 0;
  left: $spacing-border;
  width: calc(100% - #{$spacing-border}*2);
  padding: $spacing-6 $spacing-body-x $spacing-3;
  transition: margin $timing $easing;
  z-index: 999;
  transform: translate3d(0, 0, 0);

  @media (max-width: $sm) {
    top: 0 !important;
    padding: $spacing-2 $spacing-border;
  }

  > .wrapper {
    position: relative;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .logo {
    z-index: 102;
    font-size: 0;
    line-height: 0;

    @media (max-width: $sm) {
      width: 30px;

      svg {
        pointer-events: none;
      }

      svg .logo-type {
        display: none;
      }
    }

    &::after {
      display: none;
    }
  }

  .menu {
    display: flex;
    z-index: 101;

    @media (max-width: $sm) {
      &.-desktop {
        position: fixed;
        top: 0;
        left: 0;
        width: calc(100vw - #{$spacing-border}*2);
        height: 0;
        background-color: $black;
        display: flex;
        justify-content: center;
        flex-direction: column;
        font-size: $font-size-header;
        line-height: 4rem;
        font-weight: 700;
        transform-origin: top;
        transition: height $timing $easing;
        pointer-events: none;

        .item {
          opacity: 0;
          pointer-events: none;
        }
      }

      &.-desktop.-mobile-active {
        height: 100vh;
        z-index: 100;
        pointer-events: all;

        .item {
          opacity: 1;
          pointer-events: all;
          transition: opacity $timing $timing / 2 $easing;
        }
      }
    }

    &.-mobile {
      display: none;

      @media (max-width: $sm) {
        display: block;
      }
    }

    > .item {
      padding-left: $spacing-2;

      @media (max-width: $sm) {
        padding-left: $spacing-border;
      }
    }
  }
}


//headroom plugin
.headroom {
  transition: transform $timing * 2 $easing, top $timing * 2 $easing;
  will-change: transform;

  &--pinned {
    transform: translateY(0);
  }

  &--top {
    top: 0;
  }

  &--not-top {
    top: -$spacing-3;
  }

  &--unpinned {
    transform: translateY(calc(-102% - #{$spacing-4}));
  }
}
